// schema.prisma

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider          = "postgresql"
  url               = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl         = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

model Ticket {
  id         String        @id @default(cuid())
  title      String?
  status     TicketStatus? @relation(fields: [statusId], references: [id])
  statusId   String?
  createdAt  DateTime      @default(now()) @map(name: "created_at")
  updatedAt  DateTime      @updatedAt @map(name: "updated_at")
  UserTicket UserTicket[]
}

model TicketStatus {
  id     String   @id @default(cuid())
  status String
  Ticket Ticket[]
}

model UserType {
  id   String @id @default(cuid())
  type String
  User User[]
}

model UserTicket {
  id       String  @id @default(cuid())
  userId   String?
  user     User?   @relation(fields: [userId], references: [id])
  ticketId String?
  ticket   Ticket? @relation(fields: [ticketId], references: [id])
}

model User {
  id         String       @id @default(cuid())
  firstname  String
  lastname   String
  email      String?      @unique
  createdAt  DateTime     @default(now()) @map(name: "created_at")
  updatedAt  DateTime     @updatedAt @map(name: "updated_at")
  UserType   UserType?    @relation(fields: [UserTypeId], references: [id])
  UserTypeId String?
  UserTicket UserTicket[]

  @@map(name: "users")
}
